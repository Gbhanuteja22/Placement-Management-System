name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # Install dependencies and setup
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            apps/*/node_modules
            packages/*/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

  # Lint and Type Check
  lint-and-typecheck:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint
        continue-on-error: true

      - name: Run type checking
        run: npm run typecheck
        continue-on-error: true

  # Run Tests
  test:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test
        continue-on-error: true

  # Security Scan
  security:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run security audit
        run: npm audit --audit-level=moderate
        continue-on-error: true

      - name: Check for sensitive files
        run: |
          echo "Checking for sensitive files..."
          if find . -name "*.env" -not -path "./node_modules/*" -not -path "./.env.example" | grep -q .; then
            echo "Warning: Found .env files that might contain secrets"
            find . -name "*.env" -not -path "./node_modules/*" -not -path "./.env.example"
          else
            echo "No sensitive .env files found in repository"
          fi

  # Build
  build:
    runs-on: ubuntu-latest
    needs: [lint-and-typecheck, test]
    if: always()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build
        continue-on-error: true

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        if: success()
        with:
          name: build-artifacts
          path: |
            apps/web/dist
            apps/api/dist
          retention-days: 5

  # E2E Tests (placeholder)
  e2e:
    runs-on: ubuntu-latest
    needs: build
    if: success()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: E2E Tests Placeholder
        run: |
          echo "E2E tests would run here"
          echo "Skipping for now - not configured"

  # Deploy to Staging (placeholder)
  deploy-staging:
    runs-on: ubuntu-latest
    needs: [build, e2e]
    if: github.ref == 'refs/heads/develop' && success()
    steps:
      - name: Deploy to Staging
        run: |
          echo "Would deploy to staging environment"
          echo "Deployment not configured yet"

  # Deploy to Production (placeholder)
  deploy-production:
    runs-on: ubuntu-latest
    needs: [build, e2e]
    if: github.ref == 'refs/heads/main' && success()
    steps:
      - name: Deploy to Production
        run: |
          echo "Would deploy to production environment"
          echo "Deployment not configured yet"
